# This is a basic workflow to help you get started with Actions

name: SoftRF Stratux builds

# Controls when the workflow will run
on:
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        board:
          - 'esp32:esp32:esp32:PartitionScheme=min_spiffs,CPUFreq=80,PSRAM=enabled,FlashFreq=80,FlashMode=dio,FlashSize=4M,DebugLevel=none'
          - 'adafruit:nrf52:pca10056'
          - 'esp32:esp32:esp32s2:PartitionScheme=min_spiffs,CPUFreq=80,PSRAM=enabled,FlashMode=dio,FlashSize=4M,DebugLevel=none'
          - 'esp32:esp32:esp32s3:PartitionScheme=min_spiffs,CPUFreq=80,PSRAM=enabled,FlashMode=dio,FlashSize=4M,DebugLevel=none'

    env:
      ARDUINO_IDE_VERSION: 1.8.13
      BOARD: ${{ matrix.board }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Runs a set of commands using the runners shell
      - name: Run before_install
        run: |
          git clone https://github.com/microsoft/uf2 ~/uf2
          mkdir -p ~/.local/bin
          # version 0.28.0 gave me issues
          curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/0.27.0/install.sh | BINDIR=~/.local/bin sh
          #curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | BINDIR=~/.local/bin sh
          if [[ "$BOARD" =~ "adafruit:nrf52:" ]]; then
            sudo apt-get install python3-pip
            pip3 install setuptools --user
            pip3 install adafruit-nrfutil --user
            pip3 install intelhex --user
          fi

      - name: Run install
        run: |
          mkdir $HOME/Arduino
          ln -s $GITHUB_WORKSPACE/software/firmware/source/libraries $HOME/Arduino/libraries
          
          if [[ "$BOARD" =~ "esp32:esp32" ]]; then
            arduino-cli core install esp32:esp32 --additional-urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
            cd $GITHUB_WORKSPACE
          fi

          if [[ "$BOARD" =~ "adafruit:nrf52:" ]]; then
            arduino-cli core install adafruit:nrf52 --additional-urls https://adafruit.github.io/arduino-board-index/package_adafruit_index.json
            if [[ ! -f ~/.local/bin/adafruit-nrfutil ]]; then
              ln -s /bin/true ~/.local/bin/adafruit-nrfutil
            fi
            cd $GITHUB_WORKSPACE
          fi

      - name: Run script
        run: |
          echo 'Building board ${BOARD}'
          arduino-cli compile -e -b $BOARD $GITHUB_WORKSPACE/software/firmware/source/SoftRF
          PART1=$(cut -d':' -f1 <<< $BOARD)
          PART2=$(cut -d':' -f2 <<< $BOARD)
          PART3=$(cut -d':' -f3 <<< $BOARD)
          cd "$GITHUB_WORKSPACE/software/firmware/source/SoftRF/build/$PART1.$PART2.$PART3"

          if [[ "$BOARD" =~ "esp32:esp32:"        ]]; then
            zip -r "SoftRF_$PART3".zip . 
          fi ;

          if [[ "$BOARD" =~ "adafruit:nrf52:"        ]]; then
            ~/uf2/utils/uf2conv.py SoftRF.ino.hex -c -f 0xADA52840
            mv SoftRF.ino.zip SoftRF_$PART3.zip
          fi ;

          find .
          cd "$GITHUB_WORKSPACE"

#      - name: Save Release URL File for publish
#        uses: actions/upload-artifact@v1
#        with:
#          name: release_url
#          path: release_url.txt
#
#      - name: "Create release"
#        uses: "marvinpinto/action-automatic-releases@latest"
#          with:
#            repo_token: "${{ secrets.GITHUB_TOKEN }}"
#            automatic_release_tag: "latest"
#            prerelease: true
#            title: "Stratux Build"
#            files: |
#              SoftRF/SoftRF/software/firmware/source/SoftRF/build/adafruit.nrf52.pca10056/SoftRF.ino.zip
#              SoftRF/SoftRF/software/firmware/source/SoftRF/build/esp32.esp32.esp32s2/SoftRF.ino.map
